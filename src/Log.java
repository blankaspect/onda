/*====================================================================*\

Log.java

Log class.

\*====================================================================*/


// IMPORTS


import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import uk.org.blankaspect.exception.AppException;

//----------------------------------------------------------------------


// LOG CLASS


class Log
{

////////////////////////////////////////////////////////////////////////
//  Constants
////////////////////////////////////////////////////////////////////////

    public static final String  ERROR_PREFIX    = "! ";

////////////////////////////////////////////////////////////////////////
//  Member classes : non-inner classes
////////////////////////////////////////////////////////////////////////


    // LOG LINE CLASS


    public static class Line
    {

    ////////////////////////////////////////////////////////////////////
    //  Constants
    ////////////////////////////////////////////////////////////////////

        enum Kind
        {
            INFO,
            ERROR
        }

    ////////////////////////////////////////////////////////////////////
    //  Constructors
    ////////////////////////////////////////////////////////////////////

        private Line( Kind   kind,
                      String str )
        {
            this.kind = kind;
            this.str = str;
        }

        //--------------------------------------------------------------

    ////////////////////////////////////////////////////////////////////
    //  Instance variables
    ////////////////////////////////////////////////////////////////////

        Kind    kind;
        String  str;

    }

    //==================================================================

////////////////////////////////////////////////////////////////////////
//  Constructors
////////////////////////////////////////////////////////////////////////

    private Log( )
    {
        lines = new ArrayList<>( );
    }

    //------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////
//  Class methods
////////////////////////////////////////////////////////////////////////

    public static Log getInstance( )
    {
        if ( instance == null )
            instance = new Log( );
        return instance;
    }

    //------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////
//  Instance methods
////////////////////////////////////////////////////////////////////////

    public List<Line> getLines( )
    {
        return Collections.unmodifiableList( lines );
    }

    //------------------------------------------------------------------

    public boolean isEmpty( )
    {
        return lines.isEmpty( );
    }

    //------------------------------------------------------------------

    public void clear( )
    {
        lines.clear( );
    }

    //------------------------------------------------------------------

    public void setShow( boolean show )
    {
        this.show = show;
    }

    //------------------------------------------------------------------

    public void appendLine( String str )
    {
        if ( show )
            System.out.println( str );
        else
            lines.add( new Line( Line.Kind.INFO, str ) );
    }

    //------------------------------------------------------------------

    public void appendException( AppException exception )
    {
        for ( String str : exception.toString( ).split( "\n" ) )
        {
            if ( show )
                System.out.println( ERROR_PREFIX + str );
            else
                lines.add( new Line( Line.Kind.ERROR, str ) );
        }
    }

    //------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////
//  Class variables
////////////////////////////////////////////////////////////////////////

    private static  Log instance;

////////////////////////////////////////////////////////////////////////
//  Instance variables
////////////////////////////////////////////////////////////////////////

    private List<Line>  lines;
    private boolean     show;

}

//----------------------------------------------------------------------
